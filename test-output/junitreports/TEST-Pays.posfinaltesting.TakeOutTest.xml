<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitReportReporter -->
<testsuite hostname="Pratik" failures="0" tests="62" name="Pays.posfinaltesting.TakeOutTest" time="1.134" errors="3" timestamp="2025-03-20T21:34:02 IST" skipped="59">
  <testcase classname="Pays.posfinaltesting.TakeOutTest" name="Takeout_UpdateOrder" time="0.000">
    <skipped/>
  </testcase> <!-- Takeout_UpdateOrder -->
  <testcase classname="Pays.posfinaltesting.TakeOutTest" name="TakeOut_AddOrderNote" time="0.000">
    <skipped/>
  </testcase> <!-- TakeOut_AddOrderNote -->
  <testcase classname="Pays.posfinaltesting.TakeOutTest" name="TakeOut_AddManualItems" time="0.000">
    <skipped/>
  </testcase> <!-- TakeOut_AddManualItems -->
  <testcase classname="Pays.posfinaltesting.TakeOutTest" name="TakeOut_CheckOrderType" time="0.000">
    <skipped/>
  </testcase> <!-- TakeOut_CheckOrderType -->
  <testcase classname="Pays.posfinaltesting.TakeOutTest" name="ConfigureAppium" time="0.386">
    <error message="Could not start a new session. Response code 500. Message: An unknown server-side error occurred while processing the command. Original error: Error getting device API level. Original error: Error executing adbExec. Original error: &#039;Command &#039;C:\\Users\\prati\\AppData\\Local\\Android\\Sdk\\platform-tools\\adb.exe -P 5037 -s 2290080791 shell getprop ro.build.version.sdk&#039; exited with code 255&#039;; Command output: &lt;empty&gt; 
Host info: host: &#039;PRATIK&#039;, ip: &#039;192.168.0.234&#039;
Build info: version: &#039;4.29.0&#039;, revision: &#039;5fc1ec94cb&#039;
System info: os.name: &#039;Windows 11&#039;, os.arch: &#039;amd64&#039;, os.version: &#039;10.0&#039;, java.version: &#039;21.0.6&#039;
Driver info: io.appium.java_client.android.AndroidDriver
Command: [null, newSession {capabilities=[Capabilities {appium:app: E:\EclipseWorkspace\posfina..., appium:appActivity: com.pays.pos.ui.activities...., appium:appPackage: com.pays.pos, appium:autoGrantPermissions: true, appium:automationName: UIAutomator2, appium:deviceName: LANDI C20pro, appium:newCommandTimeout: 10000, platformName: ANDROID}]}]
Capabilities {appium:app: E:\EclipseWorkspace\posfina..., appium:appActivity: com.pays.pos.ui.activities...., appium:appPackage: com.pays.pos, appium:autoGrantPermissions: true, appium:automationName: UIAutomator2, appium:deviceName: LANDI C20pro, appium:newCommandTimeout: 10000, platformName: ANDROID}" type="org.openqa.selenium.SessionNotCreatedException">
      <![CDATA[org.openqa.selenium.SessionNotCreatedException: Could not start a new session. Response code 500. Message: An unknown server-side error occurred while processing the command. Original error: Error getting device API level. Original error: Error executing adbExec. Original error: 'Command 'C:\\Users\\prati\\AppData\\Local\\Android\\Sdk\\platform-tools\\adb.exe -P 5037 -s 2290080791 shell getprop ro.build.version.sdk' exited with code 255'; Command output: <empty> 
Host info: host: 'PRATIK', ip: '192.168.0.234'
Build info: version: '4.29.0', revision: '5fc1ec94cb'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '21.0.6'
Driver info: io.appium.java_client.android.AndroidDriver
Command: [null, newSession {capabilities=[Capabilities {appium:app: E:\EclipseWorkspace\posfina..., appium:appActivity: com.pays.pos.ui.activities...., appium:appPackage: com.pays.pos, appium:autoGrantPermissions: true, appium:automationName: UIAutomator2, appium:deviceName: LANDI C20pro, appium:newCommandTimeout: 10000, platformName: ANDROID}]}]
Capabilities {appium:app: E:\EclipseWorkspace\posfina..., appium:appActivity: com.pays.pos.ui.activities...., appium:appPackage: com.pays.pos, appium:autoGrantPermissions: true, appium:automationName: UIAutomator2, appium:deviceName: LANDI C20pro, appium:newCommandTimeout: 10000, platformName: ANDROID}
at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:114)
at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:75)
at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:61)
at io.appium.java_client.remote.AppiumCommandExecutor.createSession(AppiumCommandExecutor.java:178)
at io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:243)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:545)
at io.appium.java_client.AppiumDriver.startSession(AppiumDriver.java:313)
at org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:174)
at io.appium.java_client.AppiumDriver.<init>(AppiumDriver.java:101)
at io.appium.java_client.AppiumDriver.<init>(AppiumDriver.java:113)
at io.appium.java_client.android.AndroidDriver.<init>(AndroidDriver.java:109)
at Pays.posfinaltesting.BaseTest.ConfigureAppium(BaseTest.java:54)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:71)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:400)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:333)
at org.testng.internal.invokers.TestMethodWorker.invokeBeforeClassMethods(TestMethodWorker.java:188)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:739)
at org.testng.TestRunner.run(TestRunner.java:614)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
    </error>
  </testcase> <!-- ConfigureAppium -->
  <testcase classname="Pays.posfinaltesting.TakeOutTest" name="TakeOut_ChangeOrderType" time="0.000">
    <skipped/>
  </testcase> <!-- TakeOut_ChangeOrderType -->
  <testcase classname="Pays.posfinaltesting.TakeOutTest" name="TakeOut_UpdateItem" time="0.000">
    <skipped/>
  </testcase> <!-- TakeOut_UpdateItem -->
  <testcase classname="Pays.posfinaltesting.TakeOutTest" name="TakeOut_Transaction" time="0.000">
    <skipped/>
  </testcase> <!-- TakeOut_Transaction -->
  <testcase classname="Pays.posfinaltesting.TakeOutTest" name="TakeOut_Setup" time="0.000">
    <skipped/>
  </testcase> <!-- TakeOut_Setup -->
  <testcase classname="Pays.posfinaltesting.TakeOutTest" name="TakeOut_Cash_RefundItemWise_PrintReceipt" time="0.000">
    <skipped/>
  </testcase> <!-- TakeOut_Cash_RefundItemWise_PrintReceipt -->
  <testcase classname="Pays.posfinaltesting.TakeOutTest" name="TakeOut_Transaction" time="0.000">
    <skipped/>
  </testcase> <!-- TakeOut_Transaction -->
  <testcase classname="Pays.posfinaltesting.TakeOutTest" name="TakeOut_Transaction" time="0.000">
    <skipped/>
  </testcase> <!-- TakeOut_Transaction -->
  <testcase classname="Pays.posfinaltesting.TakeOutTest" name="TakeOut_Cash_RefundItemWise_SelectRefund" time="0.000">
    <skipped/>
  </testcase> <!-- TakeOut_Cash_RefundItemWise_SelectRefund -->
  <testcase classname="Pays.posfinaltesting.TakeOutTest" name="TakeOut_AddCustomer" time="0.001">
    <skipped/>
  </testcase> <!-- TakeOut_AddCustomer -->
  <testcase classname="Pays.posfinaltesting.TakeOutTest" name="TakeOut_AddCustomer" time="0.000">
    <skipped/>
  </testcase> <!-- TakeOut_AddCustomer -->
  <testcase classname="Pays.posfinaltesting.TakeOutTest" name="TakeOut_ChangeOrderType" time="0.000">
    <skipped/>
  </testcase> <!-- TakeOut_ChangeOrderType -->
  <testcase classname="Pays.posfinaltesting.TakeOutTest" name="TakeOut_AddManualItems" time="0.000">
    <skipped/>
  </testcase> <!-- TakeOut_AddManualItems -->
  <testcase classname="Pays.posfinaltesting.TakeOutTest" name="TakeOut_AppliedLoyaltyPoint" time="0.000">
    <skipped/>
  </testcase> <!-- TakeOut_AppliedLoyaltyPoint -->
  <testcase classname="Pays.posfinaltesting.TakeOutTest" name="ConfigureAppium" time="0.412">
    <error message="Could not start a new session. Response code 500. Message: An unknown server-side error occurred while processing the command. Original error: Error getting device API level. Original error: Error executing adbExec. Original error: &#039;Command &#039;C:\\Users\\prati\\AppData\\Local\\Android\\Sdk\\platform-tools\\adb.exe -P 5037 -s 2290080791 shell getprop ro.build.version.sdk&#039; exited with code 255&#039;; Command output: &lt;empty&gt; 
Host info: host: &#039;PRATIK&#039;, ip: &#039;192.168.0.234&#039;
Build info: version: &#039;4.29.0&#039;, revision: &#039;5fc1ec94cb&#039;
System info: os.name: &#039;Windows 11&#039;, os.arch: &#039;amd64&#039;, os.version: &#039;10.0&#039;, java.version: &#039;21.0.6&#039;
Driver info: io.appium.java_client.android.AndroidDriver
Command: [null, newSession {capabilities=[Capabilities {appium:app: E:\EclipseWorkspace\posfina..., appium:appActivity: com.pays.pos.ui.activities...., appium:appPackage: com.pays.pos, appium:autoGrantPermissions: true, appium:automationName: UIAutomator2, appium:deviceName: LANDI C20pro, appium:newCommandTimeout: 10000, platformName: ANDROID}]}]
Capabilities {appium:app: E:\EclipseWorkspace\posfina..., appium:appActivity: com.pays.pos.ui.activities...., appium:appPackage: com.pays.pos, appium:autoGrantPermissions: true, appium:automationName: UIAutomator2, appium:deviceName: LANDI C20pro, appium:newCommandTimeout: 10000, platformName: ANDROID}" type="org.openqa.selenium.SessionNotCreatedException">
      <![CDATA[org.openqa.selenium.SessionNotCreatedException: Could not start a new session. Response code 500. Message: An unknown server-side error occurred while processing the command. Original error: Error getting device API level. Original error: Error executing adbExec. Original error: 'Command 'C:\\Users\\prati\\AppData\\Local\\Android\\Sdk\\platform-tools\\adb.exe -P 5037 -s 2290080791 shell getprop ro.build.version.sdk' exited with code 255'; Command output: <empty> 
Host info: host: 'PRATIK', ip: '192.168.0.234'
Build info: version: '4.29.0', revision: '5fc1ec94cb'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '21.0.6'
Driver info: io.appium.java_client.android.AndroidDriver
Command: [null, newSession {capabilities=[Capabilities {appium:app: E:\EclipseWorkspace\posfina..., appium:appActivity: com.pays.pos.ui.activities...., appium:appPackage: com.pays.pos, appium:autoGrantPermissions: true, appium:automationName: UIAutomator2, appium:deviceName: LANDI C20pro, appium:newCommandTimeout: 10000, platformName: ANDROID}]}]
Capabilities {appium:app: E:\EclipseWorkspace\posfina..., appium:appActivity: com.pays.pos.ui.activities...., appium:appPackage: com.pays.pos, appium:autoGrantPermissions: true, appium:automationName: UIAutomator2, appium:deviceName: LANDI C20pro, appium:newCommandTimeout: 10000, platformName: ANDROID}
at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:114)
at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:75)
at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:61)
at io.appium.java_client.remote.AppiumCommandExecutor.createSession(AppiumCommandExecutor.java:178)
at io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:243)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:545)
at io.appium.java_client.AppiumDriver.startSession(AppiumDriver.java:313)
at org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:174)
at io.appium.java_client.AppiumDriver.<init>(AppiumDriver.java:101)
at io.appium.java_client.AppiumDriver.<init>(AppiumDriver.java:113)
at io.appium.java_client.android.AndroidDriver.<init>(AndroidDriver.java:109)
at Pays.posfinaltesting.BaseTest.ConfigureAppium(BaseTest.java:54)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:71)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:400)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:333)
at org.testng.internal.invokers.TestMethodWorker.invokeBeforeClassMethods(TestMethodWorker.java:188)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:739)
at org.testng.TestRunner.run(TestRunner.java:614)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
    </error>
  </testcase> <!-- ConfigureAppium -->
  <testcase classname="Pays.posfinaltesting.TakeOutTest" name="TakeOut_AddDiscount" time="0.000">
    <skipped/>
  </testcase> <!-- TakeOut_AddDiscount -->
  <testcase classname="Pays.posfinaltesting.TakeOutTest" name="TakeOut_AddCustomer" time="0.000">
    <skipped/>
  </testcase> <!-- TakeOut_AddCustomer -->
  <testcase classname="Pays.posfinaltesting.TakeOutTest" name="TakeOut_CheckOrderType" time="0.000">
    <skipped/>
  </testcase> <!-- TakeOut_CheckOrderType -->
  <testcase classname="Pays.posfinaltesting.TakeOutTest" name="TakeOut_AddOrderNote" time="0.000">
    <skipped/>
  </testcase> <!-- TakeOut_AddOrderNote -->
  <testcase classname="Pays.posfinaltesting.TakeOutTest" name="TakeOut_SaveOrder" time="0.000">
    <skipped/>
  </testcase> <!-- TakeOut_SaveOrder -->
  <testcase classname="Pays.posfinaltesting.TakeOutTest" name="TakeOut_Cash_FullRefund_Payment" time="0.000">
    <skipped/>
  </testcase> <!-- TakeOut_Cash_FullRefund_Payment -->
  <testcase classname="Pays.posfinaltesting.TakeOutTest" name="TakeOut_SaveOrder" time="0.000">
    <skipped/>
  </testcase> <!-- TakeOut_SaveOrder -->
  <testcase classname="Pays.posfinaltesting.TakeOutTest" name="TakeOut_CheckOrderType" time="0.000">
    <skipped/>
  </testcase> <!-- TakeOut_CheckOrderType -->
  <testcase classname="Pays.posfinaltesting.TakeOutTest" name="TakeOut_Cash_RefundItemWise_CheckCashLog" time="0.000">
    <skipped/>
  </testcase> <!-- TakeOut_Cash_RefundItemWise_CheckCashLog -->
  <testcase classname="Pays.posfinaltesting.TakeOutTest" name="TakeOut_AddManualItems" time="0.000">
    <skipped/>
  </testcase> <!-- TakeOut_AddManualItems -->
  <testcase classname="Pays.posfinaltesting.TakeOutTest" name="TakeOut_Cash_FullRefund_SelectRefund" time="0.000">
    <skipped/>
  </testcase> <!-- TakeOut_Cash_FullRefund_SelectRefund -->
  <testcase classname="Pays.posfinaltesting.TakeOutTest" name="TakeOut_SelectTakeout" time="0.000">
    <skipped/>
  </testcase> <!-- TakeOut_SelectTakeout -->
  <testcase classname="Pays.posfinaltesting.TakeOutTest" name="TakeOut_Cash_FullRefund_CheckCashLog" time="0.000">
    <skipped/>
  </testcase> <!-- TakeOut_Cash_FullRefund_CheckCashLog -->
  <testcase classname="Pays.posfinaltesting.TakeOutTest" name="TakeOut_Setup" time="0.000">
    <skipped/>
  </testcase> <!-- TakeOut_Setup -->
  <testcase classname="Pays.posfinaltesting.TakeOutTest" name="TakeOut_ItemSelection" time="0.001">
    <skipped/>
  </testcase> <!-- TakeOut_ItemSelection -->
  <testcase classname="Pays.posfinaltesting.TakeOutTest" name="TakeOut_RemoveItem" time="0.000">
    <skipped/>
  </testcase> <!-- TakeOut_RemoveItem -->
  <testcase classname="Pays.posfinaltesting.TakeOutTest" name="TakeOut_SelectTakeout" time="0.000">
    <skipped/>
  </testcase> <!-- TakeOut_SelectTakeout -->
  <testcase classname="Pays.posfinaltesting.TakeOutTest" name="TakeOut_AddDiscount" time="0.000">
    <skipped/>
  </testcase> <!-- TakeOut_AddDiscount -->
  <testcase classname="Pays.posfinaltesting.TakeOutTest" name="TakeOut_AddTip" time="0.000">
    <skipped/>
  </testcase> <!-- TakeOut_AddTip -->
  <testcase classname="Pays.posfinaltesting.TakeOutTest" name="Takeout_UpdateOrder" time="0.000">
    <skipped/>
  </testcase> <!-- Takeout_UpdateOrder -->
  <testcase classname="Pays.posfinaltesting.TakeOutTest" name="TakeOut_Card_FinalWayPayment" time="0.000">
    <skipped/>
  </testcase> <!-- TakeOut_Card_FinalWayPayment -->
  <testcase classname="Pays.posfinaltesting.TakeOutTest" name="TakeOut_RemoveItem" time="0.000">
    <skipped/>
  </testcase> <!-- TakeOut_RemoveItem -->
  <testcase classname="Pays.posfinaltesting.TakeOutTest" name="TakeOut_ChangeOrderType" time="0.000">
    <skipped/>
  </testcase> <!-- TakeOut_ChangeOrderType -->
  <testcase classname="Pays.posfinaltesting.TakeOutTest" name="TakeOut_AppliedLoyaltyPoint" time="0.000">
    <skipped/>
  </testcase> <!-- TakeOut_AppliedLoyaltyPoint -->
  <testcase classname="Pays.posfinaltesting.TakeOutTest" name="TakeOut_SaveOrder" time="0.000">
    <skipped/>
  </testcase> <!-- TakeOut_SaveOrder -->
  <testcase classname="Pays.posfinaltesting.TakeOutTest" name="TakeOut_Card_Refund_PrintReceipt" time="0.000">
    <skipped/>
  </testcase> <!-- TakeOut_Card_Refund_PrintReceipt -->
  <testcase classname="Pays.posfinaltesting.TakeOutTest" name="TakeOut_UpdateItem" time="0.001">
    <skipped/>
  </testcase> <!-- TakeOut_UpdateItem -->
  <testcase classname="Pays.posfinaltesting.TakeOutTest" name="TakeOut_Cash_RefundItemWise_Payment" time="0.000">
    <skipped/>
  </testcase> <!-- TakeOut_Cash_RefundItemWise_Payment -->
  <testcase classname="Pays.posfinaltesting.TakeOutTest" name="TakeOut_AddTip" time="0.000">
    <skipped/>
  </testcase> <!-- TakeOut_AddTip -->
  <testcase classname="Pays.posfinaltesting.TakeOutTest" name="ConfigureAppium" time="0.332">
    <error message="Could not start a new session. Response code 500. Message: An unknown server-side error occurred while processing the command. Original error: Error getting device API level. Original error: Error executing adbExec. Original error: &#039;Command &#039;C:\\Users\\prati\\AppData\\Local\\Android\\Sdk\\platform-tools\\adb.exe -P 5037 -s 2290080791 shell getprop ro.build.version.sdk&#039; exited with code 255&#039;; Command output: &lt;empty&gt; 
Host info: host: &#039;PRATIK&#039;, ip: &#039;192.168.0.234&#039;
Build info: version: &#039;4.29.0&#039;, revision: &#039;5fc1ec94cb&#039;
System info: os.name: &#039;Windows 11&#039;, os.arch: &#039;amd64&#039;, os.version: &#039;10.0&#039;, java.version: &#039;21.0.6&#039;
Driver info: io.appium.java_client.android.AndroidDriver
Command: [null, newSession {capabilities=[Capabilities {appium:app: E:\EclipseWorkspace\posfina..., appium:appActivity: com.pays.pos.ui.activities...., appium:appPackage: com.pays.pos, appium:autoGrantPermissions: true, appium:automationName: UIAutomator2, appium:deviceName: LANDI C20pro, appium:newCommandTimeout: 10000, platformName: ANDROID}]}]
Capabilities {appium:app: E:\EclipseWorkspace\posfina..., appium:appActivity: com.pays.pos.ui.activities...., appium:appPackage: com.pays.pos, appium:autoGrantPermissions: true, appium:automationName: UIAutomator2, appium:deviceName: LANDI C20pro, appium:newCommandTimeout: 10000, platformName: ANDROID}" type="org.openqa.selenium.SessionNotCreatedException">
      <![CDATA[org.openqa.selenium.SessionNotCreatedException: Could not start a new session. Response code 500. Message: An unknown server-side error occurred while processing the command. Original error: Error getting device API level. Original error: Error executing adbExec. Original error: 'Command 'C:\\Users\\prati\\AppData\\Local\\Android\\Sdk\\platform-tools\\adb.exe -P 5037 -s 2290080791 shell getprop ro.build.version.sdk' exited with code 255'; Command output: <empty> 
Host info: host: 'PRATIK', ip: '192.168.0.234'
Build info: version: '4.29.0', revision: '5fc1ec94cb'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '21.0.6'
Driver info: io.appium.java_client.android.AndroidDriver
Command: [null, newSession {capabilities=[Capabilities {appium:app: E:\EclipseWorkspace\posfina..., appium:appActivity: com.pays.pos.ui.activities...., appium:appPackage: com.pays.pos, appium:autoGrantPermissions: true, appium:automationName: UIAutomator2, appium:deviceName: LANDI C20pro, appium:newCommandTimeout: 10000, platformName: ANDROID}]}]
Capabilities {appium:app: E:\EclipseWorkspace\posfina..., appium:appActivity: com.pays.pos.ui.activities...., appium:appPackage: com.pays.pos, appium:autoGrantPermissions: true, appium:automationName: UIAutomator2, appium:deviceName: LANDI C20pro, appium:newCommandTimeout: 10000, platformName: ANDROID}
at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:114)
at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:75)
at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:61)
at io.appium.java_client.remote.AppiumCommandExecutor.createSession(AppiumCommandExecutor.java:178)
at io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:243)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:545)
at io.appium.java_client.AppiumDriver.startSession(AppiumDriver.java:313)
at org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:174)
at io.appium.java_client.AppiumDriver.<init>(AppiumDriver.java:101)
at io.appium.java_client.AppiumDriver.<init>(AppiumDriver.java:113)
at io.appium.java_client.android.AndroidDriver.<init>(AndroidDriver.java:109)
at Pays.posfinaltesting.BaseTest.ConfigureAppium(BaseTest.java:54)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:71)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:400)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:333)
at org.testng.internal.invokers.TestMethodWorker.invokeBeforeClassMethods(TestMethodWorker.java:188)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:739)
at org.testng.TestRunner.run(TestRunner.java:614)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
    </error>
  </testcase> <!-- ConfigureAppium -->
  <testcase classname="Pays.posfinaltesting.TakeOutTest" name="TakeOut_RemoveItem" time="0.000">
    <skipped/>
  </testcase> <!-- TakeOut_RemoveItem -->
  <testcase classname="Pays.posfinaltesting.TakeOutTest" name="TakeOut_AppliedLoyaltyPoint" time="0.000">
    <skipped/>
  </testcase> <!-- TakeOut_AppliedLoyaltyPoint -->
  <testcase classname="Pays.posfinaltesting.TakeOutTest" name="TakeOut_ItemSelection" time="0.000">
    <skipped/>
  </testcase> <!-- TakeOut_ItemSelection -->
  <testcase classname="Pays.posfinaltesting.TakeOutTest" name="TakeOut_AddOrderNote" time="0.000">
    <skipped/>
  </testcase> <!-- TakeOut_AddOrderNote -->
  <testcase classname="Pays.posfinaltesting.TakeOutTest" name="TakeOut_AddTip" time="0.001">
    <skipped/>
  </testcase> <!-- TakeOut_AddTip -->
  <testcase classname="Pays.posfinaltesting.TakeOutTest" name="TakeOut_ItemSelection" time="0.000">
    <skipped/>
  </testcase> <!-- TakeOut_ItemSelection -->
  <testcase classname="Pays.posfinaltesting.TakeOutTest" name="TakeOut_UpdateItem" time="0.000">
    <skipped/>
  </testcase> <!-- TakeOut_UpdateItem -->
  <testcase classname="Pays.posfinaltesting.TakeOutTest" name="TakeOut_Cash_FullRefund_PrintReceipt" time="0.000">
    <skipped/>
  </testcase> <!-- TakeOut_Cash_FullRefund_PrintReceipt -->
  <testcase classname="Pays.posfinaltesting.TakeOutTest" name="TakeOut_Setup" time="0.000">
    <skipped/>
  </testcase> <!-- TakeOut_Setup -->
  <testcase classname="Pays.posfinaltesting.TakeOutTest" name="TakeOut_AddDiscount" time="0.000">
    <skipped/>
  </testcase> <!-- TakeOut_AddDiscount -->
  <testcase classname="Pays.posfinaltesting.TakeOutTest" name="TakeOut_Card_Refund_SelectRefund" time="0.000">
    <skipped/>
  </testcase> <!-- TakeOut_Card_Refund_SelectRefund -->
  <testcase classname="Pays.posfinaltesting.TakeOutTest" name="TakeOut_SelectTakeout" time="0.000">
    <skipped/>
  </testcase> <!-- TakeOut_SelectTakeout -->
  <testcase classname="Pays.posfinaltesting.TakeOutTest" name="Takeout_UpdateOrder" time="0.000">
    <skipped/>
  </testcase> <!-- Takeout_UpdateOrder -->
</testsuite> <!-- Pays.posfinaltesting.TakeOutTest -->
