<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="19" passed="10" failed="1" skipped="8">
  <reporter-output>
  </reporter-output>
  <suite started-at="2025-03-21T11:07:23 IST" name="Suite" finished-at="2025-03-21T11:10:22 IST" duration-ms="179194">
    <groups>
    </groups>
    <test started-at="2025-03-21T11:07:23 IST" name="Card_RefundPaymentTest" finished-at="2025-03-21T11:10:22 IST" duration-ms="179194">
      <class name="Pays.posfinaltesting.OpenOderTest">
        <test-method is-config="true" signature="ConfigureAppium()[pri:0, instance:Pays.posfinaltesting.OpenOderTest@52066604]" started-at="2025-03-21T11:07:23 IST" name="ConfigureAppium" finished-at="2025-03-21T11:07:42 IST" duration-ms="18349" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ConfigureAppium -->
        <test-method is-config="true" signature="Login(org.testng.ITestResult)[pri:0, instance:Pays.posfinaltesting.OpenOderTest@52066604]" started-at="2025-03-21T11:07:42 IST" name="Login" finished-at="2025-03-21T11:08:08 IST" duration-ms="26321" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=OpenOderTest.OpenOrder_Setup()[pri:0, instance:Pays.posfinaltesting.OpenOderTest@52066604] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Login -->
        <test-method signature="OpenOrder_Setup()[pri:0, instance:Pays.posfinaltesting.OpenOderTest@52066604]" started-at="2025-03-21T11:08:08 IST" name="OpenOrder_Setup" finished-at="2025-03-21T11:08:12 IST" duration-ms="4518" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- OpenOrder_Setup -->
        <test-method is-config="true" signature="Login(org.testng.ITestResult)[pri:0, instance:Pays.posfinaltesting.OpenOderTest@52066604]" started-at="2025-03-21T11:08:12 IST" name="Login" finished-at="2025-03-21T11:08:12 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=OpenOderTest.OpenOrder_SelectOpenOrder()[pri:0, instance:Pays.posfinaltesting.OpenOderTest@52066604] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Login -->
        <test-method signature="OpenOrder_SelectOpenOrder()[pri:0, instance:Pays.posfinaltesting.OpenOderTest@52066604]" started-at="2025-03-21T11:08:12 IST" name="OpenOrder_SelectOpenOrder" finished-at="2025-03-21T11:08:23 IST" depends-on-methods="Pays.posfinaltesting.OpenOderTest.OpenOrder_Setup" duration-ms="10155" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- OpenOrder_SelectOpenOrder -->
        <test-method is-config="true" signature="Login(org.testng.ITestResult)[pri:0, instance:Pays.posfinaltesting.OpenOderTest@52066604]" started-at="2025-03-21T11:08:23 IST" name="Login" finished-at="2025-03-21T11:08:23 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=OpenOderTest.OpenOrder_ItemSelection()[pri:0, instance:Pays.posfinaltesting.OpenOderTest@52066604] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Login -->
        <test-method signature="OpenOrder_ItemSelection()[pri:0, instance:Pays.posfinaltesting.OpenOderTest@52066604]" started-at="2025-03-21T11:08:23 IST" name="OpenOrder_ItemSelection" finished-at="2025-03-21T11:09:34 IST" depends-on-methods="Pays.posfinaltesting.OpenOderTest.OpenOrder_SelectOpenOrder" duration-ms="71616" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- OpenOrder_ItemSelection -->
        <test-method is-config="true" signature="Login(org.testng.ITestResult)[pri:0, instance:Pays.posfinaltesting.OpenOderTest@52066604]" started-at="2025-03-21T11:09:34 IST" name="Login" finished-at="2025-03-21T11:09:34 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=OpenOderTest.OpenOrder_AddManualItems()[pri:0, instance:Pays.posfinaltesting.OpenOderTest@52066604] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Login -->
        <test-method signature="OpenOrder_AddManualItems()[pri:0, instance:Pays.posfinaltesting.OpenOderTest@52066604]" started-at="2025-03-21T11:09:34 IST" name="OpenOrder_AddManualItems" finished-at="2025-03-21T11:09:53 IST" depends-on-methods="Pays.posfinaltesting.OpenOderTest.OpenOrder_ItemSelection" duration-ms="18447" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- OpenOrder_AddManualItems -->
        <test-method is-config="true" signature="Login(org.testng.ITestResult)[pri:0, instance:Pays.posfinaltesting.OpenOderTest@52066604]" started-at="2025-03-21T11:09:53 IST" name="Login" finished-at="2025-03-21T11:09:53 IST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=OpenOderTest.OpenOrder_UpdateItem()[pri:0, instance:Pays.posfinaltesting.OpenOderTest@52066604] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Login -->
        <test-method signature="OpenOrder_UpdateItem()[pri:0, instance:Pays.posfinaltesting.OpenOderTest@52066604]" started-at="2025-03-21T11:09:53 IST" name="OpenOrder_UpdateItem" finished-at="2025-03-21T11:10:02 IST" depends-on-methods="Pays.posfinaltesting.OpenOderTest.OpenOrder_AddManualItems" duration-ms="9019" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- OpenOrder_UpdateItem -->
        <test-method is-config="true" signature="Login(org.testng.ITestResult)[pri:0, instance:Pays.posfinaltesting.OpenOderTest@52066604]" started-at="2025-03-21T11:10:02 IST" name="Login" finished-at="2025-03-21T11:10:02 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=OpenOderTest.OpenOrder_RemoveItem()[pri:0, instance:Pays.posfinaltesting.OpenOderTest@52066604] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Login -->
        <test-method signature="OpenOrder_RemoveItem()[pri:0, instance:Pays.posfinaltesting.OpenOderTest@52066604]" started-at="2025-03-21T11:10:02 IST" name="OpenOrder_RemoveItem" finished-at="2025-03-21T11:10:04 IST" depends-on-methods="Pays.posfinaltesting.OpenOderTest.OpenOrder_UpdateItem" duration-ms="2073" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- OpenOrder_RemoveItem -->
        <test-method is-config="true" signature="Login(org.testng.ITestResult)[pri:0, instance:Pays.posfinaltesting.OpenOderTest@52066604]" started-at="2025-03-21T11:10:04 IST" name="Login" finished-at="2025-03-21T11:10:04 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=OpenOderTest.OpenOrder_SaveOrder()[pri:0, instance:Pays.posfinaltesting.OpenOderTest@52066604] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Login -->
        <test-method signature="OpenOrder_SaveOrder()[pri:0, instance:Pays.posfinaltesting.OpenOderTest@52066604]" started-at="2025-03-21T11:10:04 IST" name="OpenOrder_SaveOrder" finished-at="2025-03-21T11:10:05 IST" depends-on-methods="Pays.posfinaltesting.OpenOderTest.OpenOrder_RemoveItem" duration-ms="1460" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- OpenOrder_SaveOrder -->
        <test-method is-config="true" signature="Login(org.testng.ITestResult)[pri:0, instance:Pays.posfinaltesting.OpenOderTest@52066604]" started-at="2025-03-21T11:10:05 IST" name="Login" finished-at="2025-03-21T11:10:05 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=OpenOderTest.OpenOrder_CheckOrderType()[pri:0, instance:Pays.posfinaltesting.OpenOderTest@52066604] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Login -->
        <test-method signature="OpenOrder_CheckOrderType()[pri:0, instance:Pays.posfinaltesting.OpenOderTest@52066604]" started-at="2025-03-21T11:10:05 IST" name="OpenOrder_CheckOrderType" finished-at="2025-03-21T11:10:13 IST" depends-on-methods="Pays.posfinaltesting.OpenOderTest.OpenOrder_SaveOrder" duration-ms="8182" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- OpenOrder_CheckOrderType -->
        <test-method is-config="true" signature="Login(org.testng.ITestResult)[pri:0, instance:Pays.posfinaltesting.OpenOderTest@52066604]" started-at="2025-03-21T11:10:13 IST" name="Login" finished-at="2025-03-21T11:10:13 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=OpenOderTest.OpenOrder_UpdateOrder()[pri:0, instance:Pays.posfinaltesting.OpenOderTest@52066604] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Login -->
        <test-method signature="OpenOrder_UpdateOrder()[pri:0, instance:Pays.posfinaltesting.OpenOderTest@52066604]" started-at="2025-03-21T11:10:13 IST" name="OpenOrder_UpdateOrder" finished-at="2025-03-21T11:10:17 IST" depends-on-methods="Pays.posfinaltesting.OpenOderTest.OpenOrder_CheckOrderType" duration-ms="3376" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- OpenOrder_UpdateOrder -->
        <test-method is-config="true" signature="Login(org.testng.ITestResult)[pri:0, instance:Pays.posfinaltesting.OpenOderTest@52066604]" started-at="2025-03-21T11:10:17 IST" name="Login" finished-at="2025-03-21T11:10:17 IST" duration-ms="3" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=OpenOderTest.OpenOrder_AddOrderNote()[pri:0, instance:Pays.posfinaltesting.OpenOderTest@52066604] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Login -->
        <test-method signature="OpenOrder_AddOrderNote()[pri:0, instance:Pays.posfinaltesting.OpenOderTest@52066604]" started-at="2025-03-21T11:10:17 IST" name="OpenOrder_AddOrderNote" finished-at="2025-03-21T11:10:22 IST" depends-on-methods="Pays.posfinaltesting.OpenOderTest.OpenOrder_UpdateOrder" duration-ms="4881" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- OpenOrder_AddOrderNote -->
        <test-method is-config="true" signature="Login(org.testng.ITestResult)[pri:0, instance:Pays.posfinaltesting.OpenOderTest@52066604]" started-at="2025-03-21T11:10:22 IST" name="Login" finished-at="2025-03-21T11:10:22 IST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name={null} status=CREATED method=OpenOderTest.OpenOrder_AddDiscount()[pri:0, instance:Pays.posfinaltesting.OpenOderTest@52066604] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Login -->
        <test-method signature="OpenOrder_AddDiscount()[pri:0, instance:Pays.posfinaltesting.OpenOderTest@52066604]" started-at="2025-03-21T11:10:22 IST" name="OpenOrder_AddDiscount" finished-at="2025-03-21T11:10:22 IST" depends-on-methods="Pays.posfinaltesting.OpenOderTest.OpenOrder_AddOrderNote" duration-ms="128" status="FAIL">
          <exception class="org.openqa.selenium.WebDriverException">
            <message>
              <![CDATA[An unknown server-side error occurred while processing the command. Original error: 'POST /element' cannot be proxied to UiAutomator2 server because the instrumentation process is not running (probably crashed). Check the server log and/or the logcat output for more details
Build info: version: '4.29.0', revision: '5fc1ec94cb'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '21.0.6'
Driver info: io.appium.java_client.android.AndroidDriver
Command: [91603bf0-d6ee-46b4-97df-8f3987b9be90, findElement {using=id, value=com.pays.pos:id/txtSubTotal}]
Capabilities {appium:app: E:\EclipseWorkspace\posfina..., appium:appActivity: com.pays.pos.ui.activities...., appium:appPackage: com.pays.pos, appium:autoGrantPermissions: true, appium:automationName: UIAutomator2, appium:databaseEnabled: false, appium:desired: {app: E:\EclipseWorkspace\posfina..., appActivity: com.pays.pos.ui.activities...., appPackage: com.pays.pos, autoGrantPermissions: true, automationName: UIAutomator2, deviceName: LANDI C20pro, newCommandTimeout: 10000, platformName: ANDROID}, appium:deviceApiLevel: 28, appium:deviceManufacturer: SUNMI, appium:deviceModel: T2s, appium:deviceName: TS43223941452, appium:deviceScreenDensity: 230, appium:deviceScreenSize: 1920x1080, appium:deviceUDID: TS43223941452, appium:javascriptEnabled: true, appium:locationContextEnabled: false, appium:networkConnectionEnabled: true, appium:newCommandTimeout: 10000, appium:pixelRatio: 1.4375, appium:platformVersion: 9, appium:statBarHeight: 0, appium:takesScreenshot: true, appium:viewportRect: {height: 1080, left: 0, top: 0, width: 1920}, appium:warnings: {}, appium:webStorageEnabled: false, platformName: ANDROID}
Session ID: 91603bf0-d6ee-46b4-97df-8f3987b9be90]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.WebDriverException: An unknown server-side error occurred while processing the command. Original error: 'POST /element' cannot be proxied to UiAutomator2 server because the instrumentation process is not running (probably crashed). Check the server log and/or the logcat output for more details
Build info: version: '4.29.0', revision: '5fc1ec94cb'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '21.0.6'
Driver info: io.appium.java_client.android.AndroidDriver
Command: [91603bf0-d6ee-46b4-97df-8f3987b9be90, findElement {using=id, value=com.pays.pos:id/txtSubTotal}]
Capabilities {appium:app: E:\EclipseWorkspace\posfina..., appium:appActivity: com.pays.pos.ui.activities...., appium:appPackage: com.pays.pos, appium:autoGrantPermissions: true, appium:automationName: UIAutomator2, appium:databaseEnabled: false, appium:desired: {app: E:\EclipseWorkspace\posfina..., appActivity: com.pays.pos.ui.activities...., appPackage: com.pays.pos, autoGrantPermissions: true, automationName: UIAutomator2, deviceName: LANDI C20pro, newCommandTimeout: 10000, platformName: ANDROID}, appium:deviceApiLevel: 28, appium:deviceManufacturer: SUNMI, appium:deviceModel: T2s, appium:deviceName: TS43223941452, appium:deviceScreenDensity: 230, appium:deviceScreenSize: 1920x1080, appium:deviceUDID: TS43223941452, appium:javascriptEnabled: true, appium:locationContextEnabled: false, appium:networkConnectionEnabled: true, appium:newCommandTimeout: 10000, appium:pixelRatio: 1.4375, appium:platformVersion: 9, appium:statBarHeight: 0, appium:takesScreenshot: true, appium:viewportRect: {height: 1080, left: 0, top: 0, width: 1920}, appium:warnings: {}, appium:webStorageEnabled: false, platformName: ANDROID}
Session ID: 91603bf0-d6ee-46b4-97df-8f3987b9be90
at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:62)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:502)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:486)
at org.openqa.selenium.remote.ErrorCodec.decode(ErrorCodec.java:167)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:138)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:50)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:215)
at io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:243)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:545)
at org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElement(ElementLocation.java:165)
at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:59)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:368)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:362)
at io.appium.java_client.pagefactory.bys.builder.ByChained.lambda$getSearchingFunction$0(ByChained.java:41)
at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:203)
at io.appium.java_client.pagefactory.bys.builder.ByChained.findElement(ByChained.java:72)
at org.openqa.selenium.remote.ElementLocation$ElementFinder$1.findElement(ElementLocation.java:139)
at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:59)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:368)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:362)
at io.appium.java_client.pagefactory.bys.ContentMappedBy.findElement(ContentMappedBy.java:54)
at org.openqa.selenium.remote.ElementLocation$ElementFinder$1.findElement(ElementLocation.java:139)
at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:59)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:368)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:362)
at io.appium.java_client.pagefactory.AppiumElementLocator.lambda$findElement$1(AppiumElementLocator.java:160)
at io.appium.java_client.pagefactory.AppiumElementLocator$WaitingFunction.apply(AppiumElementLocator.java:217)
at io.appium.java_client.pagefactory.AppiumElementLocator$WaitingFunction.apply(AppiumElementLocator.java:210)
at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:203)
at io.appium.java_client.pagefactory.AppiumElementLocator.waitFor(AppiumElementLocator.java:135)
at io.appium.java_client.pagefactory.AppiumElementLocator.findElement(AppiumElementLocator.java:160)
at io.appium.java_client.pagefactory.interceptors.InterceptorOfASingleElement.call(InterceptorOfASingleElement.java:75)
at io.appium.java_client.proxy.Interceptor.intercept(Interceptor.java:78)
at org.openqa.selenium.remote.RemoteWebElement$ByteBuddy$HqtrNaFF.isDisplayed(Unknown Source)
at org.openqa.selenium.support.ui.ExpectedConditions.elementIfVisible(ExpectedConditions.java:304)
at org.openqa.selenium.support.ui.ExpectedConditions$10.apply(ExpectedConditions.java:290)
at org.openqa.selenium.support.ui.ExpectedConditions$10.apply(ExpectedConditions.java:287)
at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:203)
at Pays.posfinaltesting.actions.TransactionClass.getFormattedValue(TransactionClass.java:202)
at Pays.posfinaltesting.actions.SetupClass.getSubtotal(SetupClass.java:426)
at Pays.posfinaltesting.OpenOderTest.OpenOrder_AddDiscount(OpenOderTest.java:176)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:739)
at org.testng.TestRunner.run(TestRunner.java:614)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.WebDriverException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- OpenOrder_AddDiscount -->
        <test-method signature="OpenOrder_ChangeOrderType()[pri:0, instance:Pays.posfinaltesting.OpenOderTest@52066604]" started-at="2025-03-21T11:10:22 IST" name="OpenOrder_ChangeOrderType" finished-at="2025-03-21T11:10:22 IST" depends-on-methods="Pays.posfinaltesting.OpenOderTest.OpenOrder_AddDiscount" duration-ms="0" status="SKIP">
          <exception class="java.lang.Throwable">
            <message>
              <![CDATA[Method Pays.posfinaltesting.OpenOderTest.OpenOrder_ChangeOrderType() on instance Pays.posfinaltesting.OpenOderTest@52066604 depends on not successfully finished methods 
[Pays.posfinaltesting.OpenOderTest.OpenOrder_AddDiscount() on instance Pays.posfinaltesting.OpenOderTest@52066604]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Throwable: Method Pays.posfinaltesting.OpenOderTest.OpenOrder_ChangeOrderType() on instance Pays.posfinaltesting.OpenOderTest@52066604 depends on not successfully finished methods 
[Pays.posfinaltesting.OpenOderTest.OpenOrder_AddDiscount() on instance Pays.posfinaltesting.OpenOderTest@52066604]
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:159)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:739)
at org.testng.TestRunner.run(TestRunner.java:614)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Throwable -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- OpenOrder_ChangeOrderType -->
        <test-method signature="OpenOrder_AddCustomer()[pri:0, instance:Pays.posfinaltesting.OpenOderTest@52066604]" started-at="2025-03-21T11:10:22 IST" name="OpenOrder_AddCustomer" finished-at="2025-03-21T11:10:22 IST" depends-on-methods="Pays.posfinaltesting.OpenOderTest.OpenOrder_ChangeOrderType" duration-ms="0" status="SKIP">
          <exception class="java.lang.Throwable">
            <message>
              <![CDATA[Method Pays.posfinaltesting.OpenOderTest.OpenOrder_AddCustomer() on instance Pays.posfinaltesting.OpenOderTest@52066604 depends on not successfully finished methods 
[Pays.posfinaltesting.OpenOderTest.OpenOrder_ChangeOrderType() on instance Pays.posfinaltesting.OpenOderTest@52066604]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Throwable: Method Pays.posfinaltesting.OpenOderTest.OpenOrder_AddCustomer() on instance Pays.posfinaltesting.OpenOderTest@52066604 depends on not successfully finished methods 
[Pays.posfinaltesting.OpenOderTest.OpenOrder_ChangeOrderType() on instance Pays.posfinaltesting.OpenOderTest@52066604]
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:159)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:739)
at org.testng.TestRunner.run(TestRunner.java:614)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Throwable -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- OpenOrder_AddCustomer -->
        <test-method signature="OpenOrder_Loyalty_AppliedLoyaltyPoint()[pri:0, instance:Pays.posfinaltesting.OpenOderTest@52066604]" started-at="2025-03-21T11:10:22 IST" name="OpenOrder_Loyalty_AppliedLoyaltyPoint" finished-at="2025-03-21T11:10:22 IST" depends-on-methods="Pays.posfinaltesting.OpenOderTest.OpenOrder_AddCustomer" duration-ms="0" status="SKIP">
          <exception class="java.lang.Throwable">
            <message>
              <![CDATA[Method Pays.posfinaltesting.OpenOderTest.OpenOrder_Loyalty_AppliedLoyaltyPoint() on instance Pays.posfinaltesting.OpenOderTest@52066604 depends on not successfully finished methods 
[Pays.posfinaltesting.OpenOderTest.OpenOrder_AddCustomer() on instance Pays.posfinaltesting.OpenOderTest@52066604]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Throwable: Method Pays.posfinaltesting.OpenOderTest.OpenOrder_Loyalty_AppliedLoyaltyPoint() on instance Pays.posfinaltesting.OpenOderTest@52066604 depends on not successfully finished methods 
[Pays.posfinaltesting.OpenOderTest.OpenOrder_AddCustomer() on instance Pays.posfinaltesting.OpenOderTest@52066604]
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:159)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:739)
at org.testng.TestRunner.run(TestRunner.java:614)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Throwable -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- OpenOrder_Loyalty_AppliedLoyaltyPoint -->
        <test-method signature="OpenOrder_Transaction()[pri:0, instance:Pays.posfinaltesting.OpenOderTest@52066604]" started-at="2025-03-21T11:10:22 IST" name="OpenOrder_Transaction" finished-at="2025-03-21T11:10:22 IST" depends-on-methods="Pays.posfinaltesting.OpenOderTest.OpenOrder_AddCustomer" duration-ms="1" status="SKIP">
          <exception class="java.lang.Throwable">
            <message>
              <![CDATA[Method Pays.posfinaltesting.OpenOderTest.OpenOrder_Transaction() on instance Pays.posfinaltesting.OpenOderTest@52066604 depends on not successfully finished methods 
[Pays.posfinaltesting.OpenOderTest.OpenOrder_AddCustomer() on instance Pays.posfinaltesting.OpenOderTest@52066604]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Throwable: Method Pays.posfinaltesting.OpenOderTest.OpenOrder_Transaction() on instance Pays.posfinaltesting.OpenOderTest@52066604 depends on not successfully finished methods 
[Pays.posfinaltesting.OpenOderTest.OpenOrder_AddCustomer() on instance Pays.posfinaltesting.OpenOderTest@52066604]
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:159)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:739)
at org.testng.TestRunner.run(TestRunner.java:614)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Throwable -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- OpenOrder_Transaction -->
        <test-method signature="OpenOrder_Tip_AddTip()[pri:0, instance:Pays.posfinaltesting.OpenOderTest@52066604]" started-at="2025-03-21T11:10:22 IST" name="OpenOrder_Tip_AddTip" finished-at="2025-03-21T11:10:22 IST" depends-on-methods="Pays.posfinaltesting.OpenOderTest.OpenOrder_Transaction" duration-ms="0" status="SKIP">
          <exception class="java.lang.Throwable">
            <message>
              <![CDATA[Method Pays.posfinaltesting.OpenOderTest.OpenOrder_Tip_AddTip() on instance Pays.posfinaltesting.OpenOderTest@52066604 depends on not successfully finished methods 
[Pays.posfinaltesting.OpenOderTest.OpenOrder_Transaction() on instance Pays.posfinaltesting.OpenOderTest@52066604]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Throwable: Method Pays.posfinaltesting.OpenOderTest.OpenOrder_Tip_AddTip() on instance Pays.posfinaltesting.OpenOderTest@52066604 depends on not successfully finished methods 
[Pays.posfinaltesting.OpenOderTest.OpenOrder_Transaction() on instance Pays.posfinaltesting.OpenOderTest@52066604]
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:159)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:739)
at org.testng.TestRunner.run(TestRunner.java:614)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Throwable -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- OpenOrder_Tip_AddTip -->
        <test-method signature="OpenOrder_Card_FinalWayPayment()[pri:0, instance:Pays.posfinaltesting.OpenOderTest@52066604]" started-at="2025-03-21T11:10:22 IST" name="OpenOrder_Card_FinalWayPayment" finished-at="2025-03-21T11:10:22 IST" depends-on-methods="Pays.posfinaltesting.OpenOderTest.OpenOrder_Tip_AddTip" duration-ms="0" status="SKIP">
          <exception class="java.lang.Throwable">
            <message>
              <![CDATA[Method Pays.posfinaltesting.OpenOderTest.OpenOrder_Card_FinalWayPayment() on instance Pays.posfinaltesting.OpenOderTest@52066604 depends on not successfully finished methods 
[Pays.posfinaltesting.OpenOderTest.OpenOrder_Tip_AddTip() on instance Pays.posfinaltesting.OpenOderTest@52066604]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Throwable: Method Pays.posfinaltesting.OpenOderTest.OpenOrder_Card_FinalWayPayment() on instance Pays.posfinaltesting.OpenOderTest@52066604 depends on not successfully finished methods 
[Pays.posfinaltesting.OpenOderTest.OpenOrder_Tip_AddTip() on instance Pays.posfinaltesting.OpenOderTest@52066604]
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:159)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:739)
at org.testng.TestRunner.run(TestRunner.java:614)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Throwable -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- OpenOrder_Card_FinalWayPayment -->
        <test-method signature="OpenOrder_Card_Refund_SelectRefund()[pri:0, instance:Pays.posfinaltesting.OpenOderTest@52066604]" started-at="2025-03-21T11:10:22 IST" name="OpenOrder_Card_Refund_SelectRefund" finished-at="2025-03-21T11:10:22 IST" depends-on-methods="Pays.posfinaltesting.OpenOderTest.OpenOrder_Card_FinalWayPayment" duration-ms="5" status="SKIP">
          <exception class="java.lang.Throwable">
            <message>
              <![CDATA[Method Pays.posfinaltesting.OpenOderTest.OpenOrder_Card_Refund_SelectRefund() on instance Pays.posfinaltesting.OpenOderTest@52066604 depends on not successfully finished methods 
[Pays.posfinaltesting.OpenOderTest.OpenOrder_Card_FinalWayPayment() on instance Pays.posfinaltesting.OpenOderTest@52066604]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Throwable: Method Pays.posfinaltesting.OpenOderTest.OpenOrder_Card_Refund_SelectRefund() on instance Pays.posfinaltesting.OpenOderTest@52066604 depends on not successfully finished methods 
[Pays.posfinaltesting.OpenOderTest.OpenOrder_Card_FinalWayPayment() on instance Pays.posfinaltesting.OpenOderTest@52066604]
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:159)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:739)
at org.testng.TestRunner.run(TestRunner.java:614)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Throwable -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- OpenOrder_Card_Refund_SelectRefund -->
        <test-method signature="OpenOrder_Card_Refund_PrintReceipt()[pri:0, instance:Pays.posfinaltesting.OpenOderTest@52066604]" started-at="2025-03-21T11:10:22 IST" name="OpenOrder_Card_Refund_PrintReceipt" finished-at="2025-03-21T11:10:22 IST" depends-on-methods="Pays.posfinaltesting.OpenOderTest.OpenOrder_Card_Refund_SelectRefund" duration-ms="2" status="SKIP">
          <exception class="java.lang.Throwable">
            <message>
              <![CDATA[Method Pays.posfinaltesting.OpenOderTest.OpenOrder_Card_Refund_PrintReceipt() on instance Pays.posfinaltesting.OpenOderTest@52066604 depends on not successfully finished methods 
[Pays.posfinaltesting.OpenOderTest.OpenOrder_Card_Refund_SelectRefund() on instance Pays.posfinaltesting.OpenOderTest@52066604]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Throwable: Method Pays.posfinaltesting.OpenOderTest.OpenOrder_Card_Refund_PrintReceipt() on instance Pays.posfinaltesting.OpenOderTest@52066604 depends on not successfully finished methods 
[Pays.posfinaltesting.OpenOderTest.OpenOrder_Card_Refund_SelectRefund() on instance Pays.posfinaltesting.OpenOderTest@52066604]
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:159)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:739)
at org.testng.TestRunner.run(TestRunner.java:614)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Throwable -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- OpenOrder_Card_Refund_PrintReceipt -->
      </class> <!-- Pays.posfinaltesting.OpenOderTest -->
    </test> <!-- Card_RefundPaymentTest -->
  </suite> <!-- Suite -->
</testng-results>
